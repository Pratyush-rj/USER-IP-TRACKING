@model IP_Tracking.Models.Address

@{
    ViewBag.Title = "Create";
}

<style>
    /* Set the body background color to a dark color */
    body {
        background-color: #333; /* You can replace #333 with your desired dark color */
        color: white; /* Set text color to white for better readability on dark background */
    }

    .editButton {
        /* Adjust the width to fit the full text */
        min-width: 150px;
        background-color: darkblue;
        /* Add the gradient background */
        background-image: linear-gradient(to right, #ff6a00, #ee0979);
        /* Set text color to white */
        color: white;
        /* Add padding */
        padding: 5px 10px;
        /* Prevent text wrapping */
        white-space: nowrap;
    }

    .searchButton {
        /* Adjust the width to fit the full text */
        min-width: 100px;
        background-color: darkblue;
        /* Add the gradient background */
        background-image: linear-gradient(to right, #ff6a00, #ee0979);
        /* Set text color to white */
        color: white;
        /* Add padding */
        padding: 5px 10px;
        /* Prevent text wrapping */
        white-space: nowrap;
    }

    /* Add gradient background to the header */
    h2 {
        background-image: linear-gradient(to right, #ff6a00, #ee0979);
        /* Set text color to white */
        color: white;
        /* Add padding */
        padding: 10px;
    }

    /* Update the table style to be visible on dark background */
    table {
        color: white;
        background-color: #333; /* You can replace #444 with your desired dark color */
    }

    /* Update the table header style */
    th {
        background-color: #333; /* You can replace #555 with your desired dark color */
    }

    /* Update the table row style */
    tr {
        background-color: #333; /* You can replace #666 with your desired dark color */
    }
</style>
<center>
    <h2>Enter Record</h2>
</center>


@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <strong>Error ! : </strong>   @TempData["InfoMessage"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ITR_Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ITR_Section, new SelectList(ViewBag.ITRSectionSuggestions), "-- Select ITR Section --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ITR_Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IP_Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IP_Address, new { htmlAttributes = new { @class = "form-control", pattern = @"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$", title = "Please enter a valid IP address." } })
                @Html.ValidationMessageFor(model => model.IP_Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MAC_Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MAC_Address, new { htmlAttributes = new { @class = "form-control", pattern = @"^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$", title = "Please enter a valid MAC address." } })
                @Html.ValidationMessageFor(model => model.MAC_Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employee_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Employee_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employee_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IO_Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IO_Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IO_Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Switchport_No, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Switchport_No, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Switchport_No, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Domain_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Domain_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Domain_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary searchButton" style="margin-left: 90px;" />
            </div>
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
